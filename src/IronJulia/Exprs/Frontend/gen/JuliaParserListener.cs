//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JuliaParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace IronJulia.Parse {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="JuliaParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IJuliaParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="JuliaParser.file_input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile_input([NotNull] JuliaParser.File_inputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JuliaParser.file_input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile_input([NotNull] JuliaParser.File_inputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JuliaParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] JuliaParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JuliaParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] JuliaParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>loopExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopExpr([NotNull] JuliaParser.LoopExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>loopExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopExpr([NotNull] JuliaParser.LoopExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>linBOpExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLinBOpExpr([NotNull] JuliaParser.LinBOpExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>linBOpExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLinBOpExpr([NotNull] JuliaParser.LinBOpExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>getExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetExpr([NotNull] JuliaParser.GetExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>getExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetExpr([NotNull] JuliaParser.GetExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>macroExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroExpr([NotNull] JuliaParser.MacroExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>macroExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroExpr([NotNull] JuliaParser.MacroExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funInvoke</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunInvoke([NotNull] JuliaParser.FunInvokeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funInvoke</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunInvoke([NotNull] JuliaParser.FunInvokeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpr([NotNull] JuliaParser.LiteralExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpr([NotNull] JuliaParser.LiteralExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>condExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondExpr([NotNull] JuliaParser.CondExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>condExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondExpr([NotNull] JuliaParser.CondExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>prodBOpExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProdBOpExpr([NotNull] JuliaParser.ProdBOpExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>prodBOpExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProdBOpExpr([NotNull] JuliaParser.ProdBOpExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleExpr([NotNull] JuliaParser.TupleExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleExpr([NotNull] JuliaParser.TupleExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignExpr([NotNull] JuliaParser.AssignExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignExpr([NotNull] JuliaParser.AssignExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>condBOpExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondBOpExpr([NotNull] JuliaParser.CondBOpExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>condBOpExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondBOpExpr([NotNull] JuliaParser.CondBOpExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>powBOpExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPowBOpExpr([NotNull] JuliaParser.PowBOpExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>powBOpExpr</c>
	/// labeled alternative in <see cref="JuliaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPowBOpExpr([NotNull] JuliaParser.PowBOpExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JuliaParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] JuliaParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JuliaParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] JuliaParser.IfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JuliaParser.elseIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIf([NotNull] JuliaParser.ElseIfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JuliaParser.elseIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIf([NotNull] JuliaParser.ElseIfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JuliaParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse([NotNull] JuliaParser.ElseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JuliaParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse([NotNull] JuliaParser.ElseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nameRef</c>
	/// labeled alternative in <see cref="JuliaParser.assignable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameRef([NotNull] JuliaParser.NameRefContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nameRef</c>
	/// labeled alternative in <see cref="JuliaParser.assignable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameRef([NotNull] JuliaParser.NameRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JuliaParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] JuliaParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JuliaParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] JuliaParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JuliaParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] JuliaParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JuliaParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] JuliaParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JuliaParser.blockbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockbody([NotNull] JuliaParser.BlockbodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JuliaParser.blockbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockbody([NotNull] JuliaParser.BlockbodyContext context);
}
} // namespace IronJulia.Parse
